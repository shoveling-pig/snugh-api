openapi: 3.0.0
info:
  title: SNUGH_API
  version: '1.0'
  description: SNUGH Website 개발을 위한 API Docs입니다.
servers:
  - url: 'http://localhost:3000'
paths:
  /user/:
    post:
      summary: Create new user
      operationId: post-user
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                    minLength: 1
                  full_name:
                    type: string
                    minLength: 1
                  year:
                    type: number
                  status:
                    type: string
                    minLength: 1
                  major:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - name
                        - type
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: string
                          minLength: 1
                  token:
                    type: string
                    minLength: 1
                required:
                  - id
                  - email
                  - full_name
                  - year
                  - status
                  - major
                  - token
              examples:
                example-1:
                  value:
                    id: 1
                    email: ammo123@snu.ac.kr
                    full_name: ammo kim
                    year: 2019
                    status: active
                    major:
                      - id: 1
                        name: 경영학과
                        type: major
                      - id: 2
                        name: 컴퓨터공학과
                        type: double_major
                    token: Token abc123abc123
        '400':
          description: |-
            1. 모든 Required Body 항목을 채우지 않았을 때
            2. 이미 있는 유저일 때(email로 확인)
            3. Body 항목 중 데이터 type이 다른 경우
            4. Body 중 email 양식 오류(가운데에 '@')
            5. Body 중 password 양식 오류(6글자 이상)
            6. Body 중 year 양식 오류(4자리 숫자)
            7. Body 중 full_name 양식 오류(2~30글자)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                모든 Required Body 항목을 채우지 않았을 때:
                  value:
                    error: (없는 항목들) missing
                이미 있는 유저일 때(email로 확인):
                  value:
                    error: existing user
                Body 항목 중 데이터 type이 다른 경우:
                  value:
                    error: (항목들) wrong data type
                Body 중 email 양식 오류(가운데에 '@'):
                  value:
                    error: email form wrong
                Body 중 password 양식 오류(6글자 이상):
                  value:
                    error: password too short
                Body 중 year 양식 오류(4자리 숫자):
                  value:
                    error: year too large or too small
                Body 중 full_name 양식 오류(2~30글자):
                  value:
                    error: full_name too short or too long
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                year:
                  type: number
                full_name:
                  type: string
                  minLength: 1
                majors:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
                status:
                  type: string
                  minLength: 1
              required:
                - email
                - password
                - year
                - full_name
                - majors
                - status
            examples:
              example-1:
                value:
                  email: ammo123@snu.ac.kr
                  password: ammo123
                  year: 2019
                  full_name: ammo kim
                  majors:
                    - major_name: 경영학과
                      major_type: single_major
                    - major_name: 경영학과
                      major_type: single_major
                  status: active
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                username:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                first_name:
                  type: string
                  minLength: 1
                last_name:
                  type: string
                  minLength: 1
                status:
                  type: number
                student_id:
                  type: string
                  minLength: 1
                major_id:
                  type: array
                  items:
                    type: integer
              required:
                - username
                - password
                - first_name
                - last_name
                - status
                - student_id
                - major_id
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      parameters: []
    parameters: []
  /user/me/:
    put:
      summary: Update my info
      operationId: put-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                    minLength: 1
                  year:
                    type: number
                  full_name:
                    type: string
                    minLength: 1
                  status:
                    type: string
                    minLength: 1
                  major:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - name
                        - type
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: string
                          minLength: 1
                required:
                  - id
                  - email
                  - year
                  - full_name
                  - status
                  - major
              examples:
                example-1:
                  value:
                    id: 1
                    email: ammo123@snu.ac.kr
                    year: 2019
                    full_name: ammo park
                    status: break
                    major:
                      - id: 1
                        name: 경영학과
                        type: major
        '401':
          description: Unauthorized
        '403':
          description: pk!='me'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Can't see other user's information
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                password:
                  type: string
                  minLength: 1
                year:
                  type: number
                full_name:
                  type: string
                  minLength: 1
                status:
                  type: string
                  minLength: 1
              required:
                - password
                - year
                - full_name
                - status
            examples:
              example-1:
                value:
                  password: ammo456
                  year: 2020
                  full_name: ammo park
                  status: break
    parameters:
      - schema:
          type: string
        name: ''
        in: path
        required: true
    get:
      summary: Get my info
      operationId: get-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                    minLength: 1
                  year:
                    type: number
                  full_name:
                    type: string
                    minLength: 1
                  status:
                    type: string
                    minLength: 1
                  major:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - name
                        - type
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: string
                          minLength: 1
                required:
                  - id
                  - email
                  - year
                  - full_name
                  - status
                  - major
              examples:
                example-1:
                  value:
                    id: 1
                    email: ammo123@snu.ac.kr
                    year: 2019
                    full_name: ammo kim
                    status: active
                    major:
                      - id: 1
                        name: 경영학과
                        type: major
        '401':
          description: Unauthorized
        '403':
          description: pk!='me'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Can't see other user's information
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      description: ''
    delete:
      summary: Delete my info
      operationId: delete-user
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: pk!='me'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Can't see other user's information
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
  /requirement/:
    get:
      summary: Get requirements
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - major_name
                        - major_type
                      properties:
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                        requirements:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - id
                              - description
                              - is_fulfilled
                              - is_credit_requirement
                              - requirement_type
                              - requirement_type_detail
                              - requirement_type_detail_detail
                              - required_credit
                              - earned_credit
                            properties:
                              id:
                                type: number
                              description:
                                type: string
                              is_fulfilled:
                                type: boolean
                              is_credit_requirement:
                                type: boolean
                              requirement_type:
                                type: string
                                minLength: 1
                              requirement_type_detail:
                                type: string
                                minLength: 1
                              requirement_type_detail_detail:
                                type: string
                                minLength: 1
                              required_credit:
                                type: number
                              earned_credit:
                                type: number
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - major_name: 경영학과
                        major_type: major
                        requirements:
                          - id: 1
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: all
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 130
                            earned_credit: 69
                          - id: 2
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_requirement
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 30
                            earned_credit: 9
                          - id: 3
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_elective
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 6
                          - id: 4
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: general
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 9
                      - major_name: 컴퓨터공학과
                        major_type: double_major
                        requirements:
                          - id: 5
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: all
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 130
                            earned_credit: 69
                          - id: 6
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_requirement
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 30
                            earned_credit: 9
                          - id: 7
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_elective
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 6
                          - id: 8
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: general
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 9
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: plan_id missing
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-requirement
      description: |-
        (Version 1.0에는 포함되지 않는 기능입니다.)
        plan_id에 해당하는 계획의 졸업요건들을 전공별로 리스트 형태로 반환합니다. search_type 값이 all이면 나와 관계된 모든 졸업요건을, credit이면 학점 관련 졸업요건만, etc이면 기타 졸업요건만 반환합니다.
      parameters:
        - schema:
            type: integer
          in: query
          name: plan_id
          required: true
          description: 졸업요건을 조회하고 싶은 Plan의 ID
        - schema:
            type: string
            enum:
              - all
              - credit
              - etc
          in: query
          name: search_type
          required: true
          description: 조회하고 싶은 졸업요건의 종류
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    put:
      summary: Update requirements
      operationId: put-requirement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - major_name
                        - major_type
                      properties:
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                        requirements:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - id
                              - description
                              - is_fulfilled
                              - is_credit_requirement
                              - requirement_type
                              - requirement_type_detail
                              - requirement_type_detail_detail
                              - required_credit
                              - earned_credit
                            properties:
                              id:
                                type: number
                              description:
                                type: string
                              is_fulfilled:
                                type: boolean
                              is_credit_requirement:
                                type: boolean
                              requirement_type:
                                type: string
                                minLength: 1
                              requirement_type_detail:
                                type: string
                                minLength: 1
                              requirement_type_detail_detail:
                                type: string
                                minLength: 1
                              required_credit:
                                type: number
                              earned_credit:
                                type: number
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - major_name: 경영학과
                        major_type: major
                        requirements:
                          - id: 1
                            description: 경영 기타 졸업요건 1번입니다.
                            is_fulfilled: true
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 2
                            description: 경영 기타 졸업요건 2번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 3
                            description: 경영 기타 졸업요건 3번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 4
                            description: 경영 기타 졸업요건 4번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                      - major_name: 컴퓨터공학과
                        major_type: double_major
                        requirements:
                          - id: 5
                            description: 컴공 기타 졸업요건 1번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 6
                            description: 컴공 기타 졸업요건 2번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 7
                            description: 컴공 기타 졸업요건 3번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 8
                            description: 컴공 기타 졸업요건 4번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: plan_id missing
        '401':
          description: Unauthorized
      description: |-
        (Version 1.0에는 포함되지 않는 기능입니다.)
        plan_id에 해당하는 계획에서 기타 졸업요건의 충족 여부를 User가 직접 체크하거나 체크 해제할 때 사용합니다. body의 is_fulfilled 값에 따라 체크 여부가 변경됩니다. requirement_id에 해당하는 졸업요건이 기타 졸업요건이 아닌 학점 관련 졸업요건일 시에는 에러 코드가 반환됩니다.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: ''
              minItems: 1
              uniqueItems: true
              items:
                type: object
                properties:
                  plan_id:
                    type: number
                  requirement_id:
                    type: number
                  is_fulfilled:
                    type: boolean
                required:
                  - plan_id
                  - requirement_id
                  - is_fulfilled
            examples:
              example-1:
                value:
                  - plan_id: 1
                    requirement_id: 1
                    is_fulfilled: true
                  - plan_id: 2
                    requirement_id: 2
                    is_fulfilled: false
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                idiot:
                  type: array
                  items:
                    required: []
                    properties: {}
              required:
                - idiot
          text/html:
            schema:
              type: object
              properties: {}
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    parameters: []
  /requirement/progress/:
    get:
      summary: Get requirement progress
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - major_name
                        - major_type
                      properties:
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                        all:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                        major_requirement:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                        major_elective:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                        general:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - major_name: 경영학과
                        major_type: major
                        all:
                          required_credit: 130
                          earned_credit: 69
                          progress: 0.53
                        major_requirement:
                          required_credit: 30
                          earned_credit: 9
                          progress: 0.3
                        major_elective:
                          required_credit: 15
                          earned_credit: 6
                          progress: 0.4
                        general:
                          required_credit: 15
                          earned_credit: 9
                          progress: 0.6
                      - major_name: 경영학과
                        major_type: double_major
                        all:
                          required_credit: 130
                          earned_credit: 69
                          progress: 0.53
                        major_requirement:
                          required_credit: 30
                          earned_credit: 9
                          progress: 0.3
                        major_elective:
                          required_credit: 15
                          earned_credit: 6
                          progress: 0.4
                        general:
                          required_credit: 15
                          earned_credit: 9
                          progress: 0.6
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: plan_id missing
        '401':
          description: Unauthorized
      operationId: get-requirement-progress
      description: |-
        기준학점 대비 이수학점 비율을 나타내는 원형 프로그레스바 표시에 사용합니다. 전체/전필/전선/교양별 각각

        1. 기준학점 양
        2. 이수학점 양
        3. 1과 2의 비율

        을 모두 반환합니다.
      parameters:
        - schema:
            type: integer
          in: query
          name: plan_id
          description: 진행사항을 조회하고 싶은 Plan의 ID
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    parameters: []
  /user/login/:
    put:
      summary: Login
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  username:
                    type: string
                    minLength: 1
                  full_name:
                    type: string
                    minLength: 1
                  first_name:
                    type: string
                    minLength: 1
                  last_name:
                    type: string
                    minLength: 1
                  year:
                    type: number
                  status:
                    type: string
                    minLength: 1
                  major:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                        minLength: 1
                      type:
                        type: string
                        minLength: 1
                    required:
                      - id
                      - name
                      - type
                  token:
                    type: string
                    minLength: 1
                required:
                  - id
                  - username
                  - full_name
                  - first_name
                  - last_name
                  - year
                  - status
                  - major
                  - token
              examples:
                example-1:
                  value:
                    id: 1
                    username: ammo123
                    full_name: ammo kim
                    first_name: ammo
                    last_name: kim
                    year: 2019
                    status: active
                    major:
                      id: 1
                      name: 경영학과
                      type: major
                    token: Token abc123abc123
        '400':
          description: |-
            Bad Request
            1. body에 username이 없을 때
            2. body에 password가 없을 때
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: username missing
                example-2:
                  value:
                    error: password missing
        '403':
          description: 'username에 해당하는 유저가 없거나 username은 맞지만, 비밀번호가 틀렸을 때'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Wrong username or wrong password
      operationId: put-user-login
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
            examples:
              example-1:
                value:
                  email: ammo123@snu.ac.kr
                  password: ammo123
    parameters: []
  /user/logout/:
    get:
      summary: Logout
      tags: []
      responses:
        '200':
          description: OK
      operationId: get-user-logout
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /user/major/:
    delete:
      summary: Unregister a major
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - name
                        - type
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: string
                          minLength: 1
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - id: 1
                        name: 경영학과
                        type: major
        '400':
          description: |-
            1. parameter에 major_id가 없을 때
            2. major_id에 해당하는 major을 현재 유저가 듣고 있지 않을 때
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: major_id missing
                example-2:
                  value:
                    error: major_id wrong
        '401':
          description: 인증 Token이 Header에 포함되지 않았을 때 발생하는 에러입니다.
        '404':
          description: major_id에 해당하는 major가 존재하지 않을 때 발생하는 에러입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: major not_exist
      operationId: delete-user-major
      description: 사용자가 자신의 전공을 등록 취소할 때 사용하는 API입니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                major_name:
                  type: string
                  minLength: 1
                major_type:
                  type: string
                  minLength: 1
              required:
                - major_name
                - major_type
            examples:
              example-1:
                value:
                  major_name: 경영학과
                  major_type: single_major
    post:
      summary: Register a major
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - name
                        - type
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: string
                          minLength: 1
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - id: 1
                        name: 경영학과
                        type: major
                      - id: 2
                        name: 컴퓨터공학과
                        type: double_major
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: major_name missing
        '401':
          description: 인증 Token이 Header에 포함되지 않았을 때 발생하는 에러입니다.
        '404':
          description: major_name과 major_type에 해당하는 major가 존재하지 않을 때 발생하는 에러입니다.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: major not_exist
      operationId: post-user-major
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      description: 사용자가 자신의 전공을 등록할 때 사용하는 API입니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                major_name:
                  type: string
                  minLength: 1
                major_type:
                  type: string
                  minLength: 1
                  enum:
                    - major
                    - single_major
                    - double_major
                    - minor
              required:
                - major_name
                - major_type
            examples:
              example-1:
                value:
                  major_name: 컴퓨터공학과
                  major_type: double_major
        description: ''
    parameters: []
  /plan/major/:
    get:
      summary: Get majors registered in plan
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  major:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                required:
                  - id
                  - major
              examples:
                example-1:
                  value:
                    id: 0
                    major:
                      - id: 1
                        major_name: 경영학과
                        major_type: major
                      - id: 2
                        major_name: 컴퓨터공학과
                        major_type: double_major
        '400':
          description: parameter의 plan_id에 해당하는 plan이 없을 때
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: wrong plan_id
        '401':
          description: Unauthorized
      operationId: get-plan-major
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
        - schema:
            type: string
          in: query
          name: plan_id
          description: 조회하려는 plan
          required: true
      description: 특정 계획에 등록된 모든 전공들을 리스트 형태로 반환합니다.
    put:
      summary: Update majors registered in plan
      operationId: put-plan-major
      responses:
        '200':
          description: OK
      description: 계획에 등록된 전공들의 리스트를 수정합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
        - schema:
            type: string
          in: query
          name: plan_id
          description: major을 수정하려는 plan의 id
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                post_list:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
                delete_list:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
              required:
                - post_list
                - delete_list
            examples:
              example-1:
                value:
                  post_list:
                    - major_name: 언어학과
                      major_type: major
                  delete_list:
                    - major_name: 경영학과
                      major_type: major
  /plan/:
    get:
      summary: 'Get all plans '
      tags: []
      operationId: get-plan
      description: 사용자의 모든 강의 계획을 리스트 형태로 반환합니다.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                uniqueItems: true
                minItems: 0
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    plan_name:
                      type: string
                      minLength: 1
                    recent_scroll:
                      type: number
                    semesters:
                      type: array
                      uniqueItems: true
                      minItems: 0
                      items:
                        type: object
                        properties:
                          id:
                            type: number
                          plan:
                            type: number
                          year:
                            type: number
                          semester_type:
                            type: number
                          is_complete:
                            type: boolean
                          major_requirement_credits:
                            type: number
                          major_elective_credits:
                            type: number
                          general_credits:
                            type: number
                          lectures:
                            type: array
                            uniqueItems: true
                            minItems: 0
                            items:
                              type: object
                              properties:
                                lecture_id:
                                  type: number
                                semesterlecture_id:
                                  type: number
                                lecture_name:
                                  type: string
                                  minLength: 1
                                credit:
                                  type: number
                                is_open:
                                  type: boolean
                                open_semester:
                                  type: number
                              required:
                                - lecture_id
                                - semesterlecture_id
                                - lecture_name
                                - credit
                                - is_open
                                - open_semester
                        required:
                          - id
                          - plan
                          - year
                          - semester_type
                          - is_complete
                          - major_requirement_credits
                          - major_elective_credits
                          - general_credits
                  required:
                    - id
                    - plan_name
                    - recent_scroll
                    - semesters
              examples:
                example-1: {}
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    post:
      summary: 'Create a plan '
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  user:
                    type: number
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  semesters:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        plan:
                          type: number
                        year:
                          type: number
                        semester_type:
                          type: number
                        is_complete:
                          type: boolean
                        major_requirement_credits:
                          type: number
                        major_elective_credits:
                          type: number
                        general_credits:
                          type: number
                        lectures:
                          type: array
                          uniqueItems: true
                          minItems: 0
                          items:
                            type: object
                            properties:
                              lecture_id:
                                type: number
                              semesterlecture_id:
                                type: number
                              lecture_name:
                                type: string
                                minLength: 1
                              credit:
                                type: number
                              is_open:
                                type: boolean
                              open_semester:
                                type: number
                            required:
                              - lecture_id
                              - semesterlecture_id
                              - lecture_name
                              - credit
                              - is_open
                              - open_semester
                      required:
                        - id
                        - plan
                        - year
                        - semester_type
                        - is_complete
                        - major_requirement_credits
                        - major_elective_credits
                        - general_credits
                required:
                  - id
                  - user
                  - plan_name
                  - recent_scroll
                  - semesters
              examples:
                example-1:
                  value:
                    id: 0
                    plan_name: string
                    recent_scroll: 0
                    semesters:
                      - id: 0
                        plan: 0
                        year: 0
                        semester_type: 0
                        is_complete: true
                        major_requirement_credits: 0
                        major_elective_credits: 0
                        general_credits: 0
                        lectures:
                          - lecture_id: 0
                            semesterlecture_id: 0
                            lecture_name: string
                            credit: 0
                            is_open: true
                            open_semester: 0
                    user: 0
      operationId: post-plan
      description: 강의 계획을 추가합니다. 한번에 하나의 계획만 추가할 수 있습니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                plan_name:
                  type: string
                  minLength: 1
                majors:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
              required:
                - plan_name
                - majors
            examples:
              example-1:
                value:
                  plan_name: 계획 1
                  majors:
                    - major_name: 경영학과
                      major_type: major
                    - major_name: 컴퓨터공학과
                      major_type: double_major
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                user_id:
                  type: number
                plan_name:
                  type: string
                  minLength: 1
                recent_scroll:
                  type: number
              required:
                - user_id
        description: ''
      parameters: []
    parameters: []
  '/plan/{plan_id}/':
    parameters:
      - schema:
          type: string
        name: plan_id
        in: path
        required: true
    put:
      summary: Modify a plan
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  semesters:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - plan
                        - year
                        - semester_type
                        - is_complete
                        - major_requirement_credits
                        - major_elective_credits
                        - general_credits
                      properties:
                        id:
                          type: number
                        plan:
                          type: number
                        year:
                          type: number
                        semester_type:
                          type: number
                        is_complete:
                          type: boolean
                        major_requirement_credits:
                          type: number
                        major_elective_credits:
                          type: number
                        general_credits:
                          type: number
                        lectures:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - lecture_id
                              - semesterlecture_id
                              - lecture_name
                              - credit
                              - is_open
                              - open_semester
                            properties:
                              lecture_id:
                                type: number
                              semesterlecture_id:
                                type: number
                              lecture_name:
                                type: string
                                minLength: 1
                              credit:
                                type: number
                              is_open:
                                type: boolean
                              open_semester:
                                type: number
                required:
                  - id
                  - plan_name
                  - recent_scroll
                  - semesters
              examples:
                example-1:
                  value:
                    id: 0
                    plan_name: string
                    recent_scroll: 0
                    semesters:
                      - id: 0
                        plan: 0
                        year: 0
                        semester_type: 0
                        is_complete: true
                        major_requirement_credits: 0
                        major_elective_credits: 0
                        general_credits: 0
                        lectures:
                          - lecture_id: 0
                            semesterlecture_id: 0
                            lecture_name: string
                            credit: 0
                            is_open: true
                            open_semester: 0
      operationId: put-plan-plan_id
      description: 계획의 이름 또는 최근 스크롤 좌표를 수정합니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                plan_name:
                  type: string
                  minLength: 1
                recent_scroll:
                  type: number
              required:
                - plan_name
                - recent_scroll
            examples:
              example-1:
                value:
                  plan_name: 변경된 이름
                  recent_scroll: 10
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    delete:
      summary: Delete a plan
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-plan-plan_id
      description: 계획을 삭제합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
    get:
      summary: 'Get a plan '
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  user:
                    type: number
                  major:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        type:
                          type: number
                      required:
                        - id
                        - name
                        - type
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  semesters:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        plan:
                          type: number
                        year:
                          type: number
                        semester_type:
                          type: number
                        is_complete:
                          type: boolean
                        major_requirement_credits:
                          type: number
                        major_elective_credits:
                          type: number
                        general_credits:
                          type: number
                        lectures:
                          type: array
                          uniqueItems: true
                          minItems: 0
                          items:
                            type: object
                            properties:
                              lecture_id:
                                type: number
                              semesterlecture_id:
                                type: number
                              lecture_name:
                                type: string
                                minLength: 1
                              credit:
                                type: number
                              is_open:
                                type: boolean
                              open_semester:
                                type: number
                            required:
                              - lecture_id
                              - semesterlecture_id
                              - lecture_name
                              - credit
                              - is_open
                              - open_semester
                      required:
                        - id
                        - plan
                        - year
                        - semester_type
                        - is_complete
                        - major_requirement_credits
                        - major_elective_credits
                        - general_credits
                required:
                  - id
                  - user
                  - major
                  - plan_name
                  - recent_scroll
                  - semesters
              examples:
                example-1:
                  value:
                    id: 0
                    plan_name: string
                    recent_scroll: 0
                    semesters:
                      - id: 0
                        plan: 0
                        year: 0
                        semester_type: 0
                        is_complete: true
                        major_requirement_credits: 0
                        major_elective_credits: 0
                        general_credits: 0
                        lectures:
                          - lecture_id: 0
                            semesterlecture_id: 0
                            lecture_name: string
                            credit: 0
                            is_open: true
                            open_semester: 0
      operationId: get-plan-plan_id
      description: '특정 계획의 세부 정보를 반환합니다.  '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /semester/:
    post:
      summary: Create a semester
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  year:
                    type: number
                  semester_type:
                    type: string
                    minLength: 1
                  is_complete:
                    type: boolean
                  major_requirement_credit:
                    type: number
                  major_elective_credit:
                    type: number
                  general_credit:
                    type: number
                  general_elective_credit:
                    type: number
                  plan:
                    type: number
                required:
                  - id
                  - year
                  - semester_type
                  - is_complete
                  - major_requirement_credit
                  - major_elective_credit
                  - general_credit
                  - general_elective_credit
                  - plan
              examples:
                example-1:
                  value:
                    id: 5
                    year: 2021
                    is_complete: false
                    semester_type: first
                    major_requirement_credit: 0
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    plan: 5
      operationId: post-semester
      description: '유저의 현재 계획에 학기를 추가합니다. 한 번에 하나의 학기씩 추가됩니다. '
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                plan:
                  type: number
                year:
                  type: number
                semester_type:
                  type: string
                  minLength: 1
                  enum:
                    - first
                    - second
                    - summer
                    - winter
                is_complete:
                  type: boolean
              required:
                - plan
                - year
                - semester_type
            examples:
              example-1:
                value:
                  plan: 5
                  year: 2021
                  semester_type: first
                  is_complete: false
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    parameters: []
  '/semester/{semester_id}/':
    parameters:
      - schema:
          type: string
        name: semester_id
        in: path
        required: true
    put:
      summary: Modify a semester
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  year:
                    type: number
                  is_complete:
                    type: boolean
                  semester_type:
                    type: number
                  plan:
                    type: number
                required:
                  - id
                  - year
                  - is_complete
                  - semester_type
                  - plan
      operationId: put-semester-semester_id
      description: '유저 계획의 해당 학기를 수정합니다. '
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                year:
                  type: number
                semester_type:
                  type: number
                is_complete:
                  type: boolean
            examples:
              example-1:
                value:
                  year: 0
                  semester_type: 0
                  is_complete: true
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    delete:
      summary: Delete a semester
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-semester-semester_id
      description: '유저 계획의 학기를 삭제합니다.  '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    get:
      summary: Get a semester
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan:
                    type: number
                  year:
                    type: number
                  semester_type:
                    type: number
                  is_complete:
                    type: boolean
                  major_requirement_credits:
                    type: number
                  major_elective_credits:
                    type: number
                  general_credits:
                    type: number
                  lectures:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    items:
                      type: object
                      properties:
                        lecture_id:
                          type: number
                        semesterlecture_id:
                          type: number
                        lecture_name:
                          type: string
                          minLength: 1
                        credit:
                          type: number
                        is_open:
                          type: boolean
                        open_semester:
                          type: number
                      required:
                        - lecture_id
                        - semesterlecture_id
                        - lecture_name
                        - credit
                        - is_open
                        - open_semester
                required:
                  - id
                  - plan
                  - year
                  - semester_type
                  - is_complete
                  - major_requirement_credits
                  - major_elective_credits
                  - general_credits
                  - lectures
      operationId: get-semester-semester_id
      description: '유저의 현재 계획의 학기를 조회해 해당 학기의 수업들을 나열합니다. '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /lecture/:
    post:
      summary: Add lectures
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  plan:
                    type: number
                  semester:
                    type: number
                  major_requrirement:
                    type: number
                  major_elective:
                    type: number
                  general:
                    type: number
                  general_elective:
                    type: number
                  lectures:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - lecture_id
                        - semester_lecture_id
                        - recent_sequence
                        - lecture_name
                        - credit
                        - open_semester
                      properties:
                        lecture_id:
                          type: string
                          minLength: 1
                        semester_lecture_id:
                          type: number
                        recent_sequence:
                          type: number
                        lecture_name:
                          type: string
                          minLength: 1
                        credit:
                          type: number
                        open_semester:
                          type: string
                          minLength: 1
                required:
                  - plan
                  - semester
                  - major_requrirement
                  - major_elective
                  - general
                  - general_elective
                  - lectures
              examples:
                example-1:
                  value:
                    plan: 5
                    semester: 5
                    major_requrirement: 6
                    major_elective: 7
                    general: 3
                    general_elective: 3
                    lectures:
                      - lecture_id: M1831.000700
                        semester_lecture_id: 25
                        recent_sequence: 25
                        lecture_name: 사회혁신과 평생교육
                        credit: 3
                        open_semester: FIRST
                      - lecture_id: 708.236A
                        semester_lecture_id: 30
                        recent_sequence: 30
                        lecture_name: 프랑스어학습문법 2
                        credit: 3
                        open_semester: SECOND
                      - lecture_id: 701.411A
                        semester_lecture_id: 26
                        recent_sequence: 26
                        lecture_name: 교육사
                        credit: 3
                        open_semester: SECOND
                      - lecture_id: '043.085'
                        semester_lecture_id: 31
                        recent_sequence: 31
                        lecture_name: 자아탐색과 자아실현
                        credit: 3
                        open_semester: FIRST
                      - lecture_id: 705.210A
                        semester_lecture_id: 28
                        recent_sequence: 28
                        lecture_name: 한국문학교육론
                        credit: 3
                        open_semester: FIRST
                      - lecture_id: 708.226A
                        semester_lecture_id: 29
                        recent_sequence: 29
                        lecture_name: 초급프랑스어회화 1
                        credit: 3
                        open_semester: FIRST
                      - lecture_id: T2184.001400
                        semester_lecture_id: 27
                        recent_sequence: 27
                        lecture_name: 교육봉사활동2
                        credit: 1
                        open_semester: ALL
      operationId: post-lecture
      description: '유저의 학기별 테이블에 강의를 추가합니다. 한번에 복수의 수업 추가가 가능합니다. '
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                semester_id:
                  type: number
                lecture_id:
                  type: array
                  items:
                    required: []
                    properties: {}
                lecture_type:
                  type: array
                  items:
                    required: []
                    properties: {}
              required:
                - semester_id
                - lecture_id
                - lecture_type
            examples:
              example-1:
                value:
                  semester_id: 5
                  lecture_id:
                    - 1
                    - 2
                    - 3
                  lecture_type:
                    - major_elective
                    - major_requirement
                    - general
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    get:
      summary: Search lectures
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - major_name
                        - major_type
                      properties:
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                        lectures:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - id
                              - lecture_id
                              - lecture_name
                              - open_department
                              - open_major
                              - open_semester
                              - credit
                              - lecture_type
                            properties:
                              id:
                                type: number
                              lecture_id:
                                type: string
                                minLength: 1
                              lecture_name:
                                type: string
                                minLength: 1
                              open_department:
                                type: string
                                minLength: 1
                              open_major:
                                type: string
                                minLength: 1
                              open_semester:
                                type: string
                                minLength: 1
                              credit:
                                type: number
                              grade: {}
                              prev_lecture_id: {}
                              lecture_type:
                                type: string
                                minLength: 1
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - major_name: 불어교육과
                        major_type: major
                        lectures:
                          - id: 3950
                            lecture_id: 708.226A
                            lecture_name: 초급프랑스어회화 1
                            open_department: 사범대학
                            open_major: 불어교육과
                            open_semester: FIRST
                            credit: 3
                            grade: null
                            prev_lecture_id: null
                            lecture_type: MAJOR_ELECTIVE
                          - id: 1674
                            lecture_id: 708.227A
                            lecture_name: 초급프랑스어회화 2
                            open_department: 사범대학
                            open_major: 불어교육과
                            open_semester: SECOND
                            credit: 3
                            grade: null
                            prev_lecture_id: null
                            lecture_type: MAJOR_ELECTIVE
                      - major_name: 교육학과
                        major_type: double_major
                        lectures:
                          - id: 2323
                            lecture_id: '700.110'
                            lecture_name: 교육심리학
                            open_department: 사범대학
                            open_major: 교육학과
                            open_semester: SECOND
                            credit: 3
                            grade: null
                            prev_lecture_id: null
                            lecture_type: MAJOR_ELECTIVE
                          - id: 4747
                            lecture_id: '701.211'
                            lecture_name: 교육과정
                            open_department: 사범대학
                            open_major: 교육학과
                            open_semester: FIRST
                            credit: 3
                            grade: null
                            prev_lecture_id: null
                            lecture_type: MAJOR_ELECTIVE
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: year missing
        '401':
          description: Unauthorized
        '':
          description: ''
      operationId: get-lecture
      description: '강의를 검색합니다. 1) 전필/전선/교양 별로 강의를 불러올 수 있고, 2) 강의 이름에 포함된 키워드를 통해 검색이 가능합니다.'
      parameters:
        - schema:
            type: string
          in: query
          name: lecture_type
          description: '전공 필수, 전공 선택, 교양 수업을 구분합니다'
        - schema:
            type: string
          in: query
          name: search_keyword
          description: 이름 안에 검색 키워드가 들어있는 강의들을 검색합니다.
        - schema:
            type: integer
          in: query
          name: year
          description: 강의 검색의 기준년도입니다.
          required: true
        - schema:
            type: integer
          in: query
          name: plan_id
          description: 강의를 조회하고자 하는 계획의 id입니다.
    parameters: []
  '/lecture/{lecture_id}/':
    parameters:
      - schema:
          type: string
        name: lecture_id
        in: path
        required: true
    delete:
      summary: Delete a lecture
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-lecture-lecture_id
      description: '유저의 현재 학기별 테이블에서 강의를 삭제합니다.  '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    put:
      summary: Modify a lecture
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  lecture_type:
                    type: number
                  lecture_type_detail:
                    type: number
                  lecture_type_detail_detail:
                    type: number
                  recent_sequence:
                    type: number
                  semester:
                    type: number
                  lecture:
                    type: number
                required:
                  - id
                  - lecture_type
                  - lecture_type_detail
                  - lecture_type_detail_detail
                  - recent_sequence
                  - semester
                  - lecture
      operationId: put-lecture-lecture_id
      description: 유저의 학기별 테이블에 포함된 강의를 수정합니다. year와 semester_type를 수정해 강의를 다른 학기별 테이블로 이동시킬 수 있습니다. url에 들어가는 id는 수정되는 학기별 강의인 SemesterLecture의 id입니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                semester_to:
                  type: array
                  items:
                    required: []
                    properties: {}
                semester_from:
                  type: array
                  items:
                    required: []
                    properties: {}
                semester_from_id:
                  type: number
                semester_to_id:
                  type: number
              required:
                - semester_to
                - semester_from
                - semester_from_id
                - semester_to_id
            examples:
              example-1:
                value:
                  semester_to:
                    - 3921
                    - 2806
                  semester_from:
                    - 2319
                    - 4753
                    - 3012
                    - 4747
                    - 3950
                    - 1470
                    - 1669
                  semester_from_id: 6
                  semester_to_id: 5
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                semester:
                  type: number
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /major/:
    get:
      summary: Get all majors
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - 경영학과
                      - 컴퓨터공학과
                      - 언어학과
                      - 경제학과
        '403':
          description: Token 인증 실패
      operationId: get-major
      parameters:
        - schema:
            type: string
          in: query
          name: search_keyword
          description: 해당 키워드로 전공을 검색할 수 있습니다.
      description: 모든 전공들의 리스트를 조회할 수 있습니다. Query Params의 search_keyword를 이용하면 특정 키워드로 전공을 검색할 수도 있습니다.
components:
  schemas: {}
