openapi: 3.0.0
info:
  title: SNUGH_API
  version: '1.0'
  description: SNUGH Website 개발을 위한 API Docs입니다.
servers:
  - url: 'http://localhost:3000'
paths:
  /user/:
    post:
      summary: POST /user/
      operationId: post-user
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                    minLength: 1
                  entrance_year:
                    type: number
                  full_name:
                    type: string
                    minLength: 1
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  status:
                    type: string
                    minLength: 1
                  token:
                    type: string
                    minLength: 1
                required:
                  - id
                  - email
                  - entrance_year
                  - full_name
                  - majors
                  - status
                  - token
                x-examples:
                  example-1:
                    id: 7
                    email: hgd@snu.ac.kr
                    entrance_year: 2019
                    full_name: 홍길동
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    status: active
                    token: f6f6ccf58c8257846718929c547a7c0ea583c577
              examples:
                example-1:
                  value:
                    id: 7
                    email: hgd@snu.ac.kr
                    entrance_year: 2019
                    full_name: 홍길동
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    status: active
                    token: f6f6ccf58c8257846718929c547a7c0ea583c577
        '400':
          description: |-
            1. 모든 Required Body 항목을 채우지 않았을 때
            2. 이미 있는 유저일 때(email로 확인)
            3. Body 항목 중 데이터 type이 다른 경우
            4. Body 중 email 양식 오류(가운데에 '@')
            5. Body 중 password 양식 오류(6글자 이상)
            6. Body 중 year 양식 오류(4자리 숫자)
            7. Body 중 full_name 양식 오류(2~30글자)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                모든 Required Body 항목을 채우지 않았을 때:
                  value:
                    error: (없는 항목들) missing
                이미 있는 유저일 때(email로 확인):
                  value:
                    error: existing user
                Body 항목 중 데이터 type이 다른 경우:
                  value:
                    error: (항목들) wrong data type
                Body 중 email 양식 오류(가운데에 '@'):
                  value:
                    error: email form wrong
                Body 중 password 양식 오류(6글자 이상):
                  value:
                    error: password too short
                Body 중 year 양식 오류(4자리 숫자):
                  value:
                    error: year too large or too small
                Body 중 full_name 양식 오류(2~30글자):
                  value:
                    error: full_name too short or too long
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                entrance_year:
                  type: number
                full_name:
                  type: string
                  minLength: 1
                majors:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
                status:
                  type: string
                  minLength: 1
              required:
                - email
                - password
                - entrance_year
                - full_name
                - majors
                - status
              x-examples:
                example-1:
                  email: hgd@snu.ac.kr
                  password: hgd123*
                  entrance_year: 2019
                  full_name: 홍길동
                  majors:
                    - major_name: 경영학과
                      major_type: major
                    - major_name: 컴퓨터공학부
                      major_type: major
                  status: active
            examples:
              example-1:
                value:
                  email: hgd@snu.ac.kr
                  password: hgd123*
                  entrance_year: 2019
                  full_name: 홍길동
                  majors:
                    - major_name: 경영학과
                      major_type: major
                    - major_name: 컴퓨터공학부
                      major_type: major
                  status: active
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                username:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                first_name:
                  type: string
                  minLength: 1
                last_name:
                  type: string
                  minLength: 1
                status:
                  type: number
                student_id:
                  type: string
                  minLength: 1
                major_id:
                  type: array
                  items:
                    type: integer
              required:
                - username
                - password
                - first_name
                - last_name
                - status
                - student_id
                - major_id
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      parameters: []
    parameters: []
  /user/me/:
    put:
      summary: PUT /user/me/
      operationId: put-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                    minLength: 1
                  entrance_year:
                    type: number
                  full_name:
                    type: string
                    minLength: 1
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  status:
                    type: string
                    minLength: 1
                required:
                  - id
                  - email
                  - entrance_year
                  - full_name
                  - majors
                  - status
                x-examples:
                  example-1:
                    id: 7
                    email: hgd@snu.ac.kr
                    entrance_year: 2020
                    full_name: 홍길딩
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    status: break
              examples:
                example-1:
                  value:
                    id: 7
                    email: hgd@snu.ac.kr
                    entrance_year: 2020
                    full_name: 홍길딩
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    status: break
        '401':
          description: Unauthorized
        '403':
          description: pk!='me'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Can't see other user's information
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                password:
                  type: string
                  minLength: 1
                entrance_year:
                  type: number
                full_name:
                  type: string
                  minLength: 1
                status:
                  type: string
                  minLength: 1
              required:
                - password
                - entrance_year
                - full_name
                - status
            examples:
              example-1:
                value:
                  password: hgd123!
                  entrance_year: 2020
                  full_name: 홍길딩
                  status: break
              example-2:
                value:
                  password: hgd123*
                  entrance_year: 2019
                  full_name: 홍길동
                  status: active
    get:
      summary: GET /user/me/
      operationId: get-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                    minLength: 1
                  entrance_year:
                    type: number
                  full_name:
                    type: string
                    minLength: 1
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                      required:
                        - id
                        - major_name
                        - major_type
                  status:
                    type: string
                    minLength: 1
                required:
                  - id
                  - email
                  - entrance_year
                  - full_name
                  - majors
                  - status
              examples:
                example-1:
                  value:
                    id: 7
                    email: hgd@snu.ac.kr
                    entrance_year: 2019
                    full_name: 홍길동
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    status: active
        '401':
          description: Unauthorized
        '403':
          description: pk!='me'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Can't see other user's information
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      description: ''
    delete:
      summary: DELETE /user/me/
      operationId: delete-user
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: pk!='me'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Can't see other user's information
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
  /user/login/:
    put:
      summary: PUT /user/login/
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                    minLength: 1
                  entrance_year:
                    type: number
                  full_name:
                    type: string
                    minLength: 1
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  status:
                    type: string
                    minLength: 1
                  token:
                    type: string
                    minLength: 1
                required:
                  - id
                  - email
                  - entrance_year
                  - full_name
                  - majors
                  - status
                  - token
                x-examples:
                  example-1:
                    id: 7
                    email: hgd@snu.ac.kr
                    entrance_year: 2019
                    full_name: 홍길동
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    status: active
                    token: f6f6ccf58c8257846718929c547a7c0ea583c577
              examples:
                example-1:
                  value:
                    id: 7
                    email: hgd@snu.ac.kr
                    entrance_year: 2019
                    full_name: 홍길동
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    status: active
                    token: f6f6ccf58c8257846718929c547a7c0ea583c577
        '400':
          description: |-
            Bad Request
            1. body에 username이 없을 때
            2. body에 password가 없을 때
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: username missing
                example-2:
                  value:
                    error: password missing
        '403':
          description: 'username에 해당하는 유저가 없거나 username은 맞지만, 비밀번호가 틀렸을 때'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: Wrong username or wrong password
      operationId: put-user-login
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
              x-examples:
                example-1:
                  email: hgd@snu.ac.kr
                  password: hgd123*
            examples:
              example-1:
                value:
                  email: hgd@snu.ac.kr
                  password: hgd123*
    parameters: []
  /user/logout/:
    get:
      summary: GET /user/logout/
      tags: []
      responses:
        '200':
          description: OK
      operationId: get-user-logout
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /user/major/:
    delete:
      summary: DELETE /user/major/
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                required:
                  - majors
                x-examples:
                  example-1:
                    majors:
                      - id: 99
                        major_name: 경영학과
                        major_type: single_major
              examples:
                example-1:
                  value:
                    majors:
                      - id: 99
                        major_name: 경영학과
                        major_type: single_major
        '400':
          description: |-
            1. parameter에 major_id가 없을 때
            2. major_id에 해당하는 major을 현재 유저가 듣고 있지 않을 때
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: major_id missing
                example-2:
                  value:
                    error: major_id wrong
        '401':
          description: 인증 Token이 Header에 포함되지 않았을 때 발생하는 에러입니다.
        '404':
          description: major_id에 해당하는 major가 존재하지 않을 때 발생하는 에러입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: major not_exist
      operationId: delete-user-major
      description: 사용자가 자신의 전공을 등록 취소할 때 사용하는 API입니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                major_name:
                  type: string
                  minLength: 1
                major_type:
                  type: string
                  minLength: 1
              required:
                - major_name
                - major_type
              x-examples:
                example-1:
                  major_name: 컴퓨터공학부
                  major_type: major
            examples:
              example-1:
                value:
                  major_name: 컴퓨터공학부
                  major_type: major
    post:
      summary: POST /user/major/
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                required:
                  - majors
                x-examples:
                  example-1:
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
              examples:
                example-1:
                  value:
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: major_name missing
        '401':
          description: 인증 Token이 Header에 포함되지 않았을 때 발생하는 에러입니다.
        '404':
          description: major_name과 major_type에 해당하는 major가 존재하지 않을 때 발생하는 에러입니다.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: major not_exist
      operationId: post-user-major
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
      description: 사용자가 자신의 전공을 등록할 때 사용하는 API입니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                major_name:
                  type: string
                  minLength: 1
                major_type:
                  type: string
                  minLength: 1
              required:
                - major_name
                - major_type
            examples:
              example-1:
                value:
                  major_name: 컴퓨터공학부
                  major_type: major
        description: ''
    parameters: []
  /plan/:
    get:
      summary: GET /plan/
      tags: []
      operationId: get-plan
      description: 사용자의 모든 강의 계획을 리스트 형태로 반환합니다.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                items:
                  type: object
                  required:
                    - id
                    - plan_name
                    - recent_scroll
                    - majors
                    - semesters
                  properties:
                    id:
                      type: number
                    plan_name:
                      type: string
                      minLength: 1
                    recent_scroll:
                      type: number
                    majors:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        required:
                          - id
                          - major_name
                          - major_type
                        properties:
                          id:
                            type: number
                          major_name:
                            type: string
                            minLength: 1
                          major_type:
                            type: string
                            minLength: 1
                    semesters:
                      type: array
                      items:
                        required: []
                        properties: {}
                x-examples:
                  example-1:
                    - id: 5
                      plan_name: 홍길동의 계획1
                      recent_scroll: 0
                      majors:
                        - id: 23
                          major_name: 경영학과
                          major_type: major
                        - id: 98
                          major_name: 컴퓨터공학부
                          major_type: major
                      semesters: []
                    - id: 6
                      plan_name: 홍길동의 계획2
                      recent_scroll: 0
                      majors:
                        - id: 99
                          major_name: 경영학과
                          major_type: single_major
                      semesters: []
                    - id: 8
                      plan_name: 홍길동의 계획3
                      recent_scroll: 0
                      majors:
                        - id: 100
                          major_name: 컴퓨터공학부
                          major_type: single_major
                      semesters: []
              examples:
                example-1:
                  value:
                    - id: 5
                      plan_name: 홍길동의 계획1
                      recent_scroll: 0
                      majors:
                        - id: 23
                          major_name: 경영학과
                          major_type: major
                        - id: 98
                          major_name: 컴퓨터공학부
                          major_type: major
                      semesters: []
                    - id: 6
                      plan_name: 홍길동의 계획2
                      recent_scroll: 0
                      majors:
                        - id: 99
                          major_name: 경영학과
                          major_type: single_major
                      semesters: []
                    - id: 8
                      plan_name: 홍길동의 계획3
                      recent_scroll: 0
                      majors:
                        - id: 100
                          major_name: 컴퓨터공학부
                          major_type: single_major
                      semesters: []
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    post:
      summary: POST /plan/
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  semesters:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - plan_name
                  - recent_scroll
                  - majors
                  - semesters
                x-examples:
                  example-1:
                    id: 5
                    plan_name: 홍길동의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
              examples:
                example-1:
                  value:
                    id: 5
                    plan_name: 홍길동의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
      operationId: post-plan
      description: 강의 계획을 추가합니다. 한번에 하나의 계획만 추가할 수 있습니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                plan_name:
                  type: string
                  minLength: 1
                majors:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
              required:
                - plan_name
                - majors
              x-examples:
                example-1:
                  plan_name: 홍길동의 계획1
                  majors:
                    - major_name: 경영학과
                      major_type: major
                    - major_name: 컴퓨터공학부
                      major_type: major
            examples:
              example-1:
                value:
                  plan_name: 홍길동의 계획1
                  majors:
                    - major_name: 경영학과
                      major_type: major
                    - major_name: 컴퓨터공학부
                      major_type: major
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                user_id:
                  type: number
                plan_name:
                  type: string
                  minLength: 1
                recent_scroll:
                  type: number
              required:
                - user_id
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    parameters: []
  /plan/major/:
    get:
      summary: GET /plan/major/
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  semesters:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - plan_name
                  - recent_scroll
                  - majors
                  - semesters
                x-examples:
                  example-1:
                    id: 5
                    plan_name: 홍길동의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
              examples:
                example-1:
                  value:
                    id: 5
                    plan_name: 홍길동의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
        '400':
          description: parameter의 plan_id에 해당하는 plan이 없을 때
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-1:
                  value:
                    error: wrong plan_id
        '401':
          description: Unauthorized
      operationId: get-plan-major
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Token Authentication
        - schema:
            type: string
          in: query
          name: plan_id
          description: 조회하려는 plan의 id
          required: true
      description: 특정 계획에 등록된 모든 전공들을 리스트 형태로 반환합니다.
    put:
      summary: PUT /plan/major/
      operationId: put-plan-major
      responses:
        '200':
          description: OK
      description: 계획에 등록된 전공들의 리스트를 수정합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
        - schema:
            type: string
          in: query
          name: plan_id
          description: major을 수정하려는 plan의 id
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                post_list:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
                delete_list:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - major_name
                      - major_type
                    properties:
                      major_name:
                        type: string
                        minLength: 1
                      major_type:
                        type: string
                        minLength: 1
              required:
                - post_list
                - delete_list
            examples:
              example-1:
                value:
                  post_list:
                    - major_name: 언어학과
                      major_type: major
                  delete_list:
                    - major_name: 경영학과
                      major_type: major
  '/plan/{plan_id}/':
    parameters:
      - schema:
          type: string
        name: plan_id
        in: path
        required: true
    put:
      summary: 'PUT /plan/{plan_id}/'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  semesters:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - plan_name
                  - recent_scroll
                  - majors
                  - semesters
                x-examples:
                  example-1:
                    id: 5
                    plan_name: 홍길동의 계획1(수정본)
                    recent_scroll: 50
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
              examples:
                example-1:
                  value:
                    id: 5
                    plan_name: 홍길동의 계획1(수정본)
                    recent_scroll: 50
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
      operationId: put-plan-plan_id
      description: 계획의 이름 또는 최근 스크롤 좌표를 수정합니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                plan_name:
                  type: string
                  minLength: 1
                recent_scroll:
                  type: number
              required:
                - plan_name
                - recent_scroll
            examples:
              example-1:
                value:
                  plan_name: 홍길동의 계획1(수정본)
                  recent_scroll: 50
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    delete:
      summary: 'DELETE /plan/{plan_id}/'
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-plan-plan_id
      description: 계획을 삭제합니다.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
    get:
      summary: 'GET /plan/{plan_id}/'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  semesters:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - plan_name
                  - recent_scroll
                  - majors
                  - semesters
                x-examples:
                  example-1:
                    id: 5
                    plan_name: 홍길동의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
              examples:
                example-1:
                  value:
                    id: 5
                    plan_name: 홍길동의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 23
                        major_name: 경영학과
                        major_type: major
                      - id: 98
                        major_name: 컴퓨터공학부
                        major_type: major
                    semesters: []
      operationId: get-plan-plan_id
      description: '특정 계획의 세부 정보를 반환합니다.  '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /requirement/progress/:
    get:
      summary: GET /requirement/progress/
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - major_name
                        - major_type
                      properties:
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                        all:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                        major_requirement:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                        major_elective:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                        general:
                          type: object
                          properties:
                            required_credit:
                              type: number
                            earned_credit:
                              type: number
                            progress:
                              type: number
                          required:
                            - required_credit
                            - earned_credit
                            - progress
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - major_name: 경영학과
                        major_type: major
                        all:
                          required_credit: 130
                          earned_credit: 69
                          progress: 0.53
                        major_requirement:
                          required_credit: 30
                          earned_credit: 9
                          progress: 0.3
                        major_elective:
                          required_credit: 15
                          earned_credit: 6
                          progress: 0.4
                        general:
                          required_credit: 15
                          earned_credit: 9
                          progress: 0.6
                      - major_name: 경영학과
                        major_type: double_major
                        all:
                          required_credit: 130
                          earned_credit: 69
                          progress: 0.53
                        major_requirement:
                          required_credit: 30
                          earned_credit: 9
                          progress: 0.3
                        major_elective:
                          required_credit: 15
                          earned_credit: 6
                          progress: 0.4
                        general:
                          required_credit: 15
                          earned_credit: 9
                          progress: 0.6
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: plan_id missing
        '401':
          description: Unauthorized
      operationId: get-requirement-progress
      description: |-
        기준학점 대비 이수학점 비율을 나타내는 원형 프로그레스바 표시에 사용합니다. 전체/전필/전선/교양별 각각

        1. 기준학점 양
        2. 이수학점 양
        3. 1과 2의 비율

        을 모두 반환합니다.
      parameters:
        - schema:
            type: integer
          in: query
          name: plan_id
          description: 진행사항을 조회하고 싶은 Plan의 ID
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    parameters: []
  /requirement/:
    get:
      summary: GET /requirement/
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - major_name
                        - major_type
                      properties:
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                        requirements:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - id
                              - description
                              - is_fulfilled
                              - is_credit_requirement
                              - requirement_type
                              - requirement_type_detail
                              - requirement_type_detail_detail
                              - required_credit
                              - earned_credit
                            properties:
                              id:
                                type: number
                              description:
                                type: string
                              is_fulfilled:
                                type: boolean
                              is_credit_requirement:
                                type: boolean
                              requirement_type:
                                type: string
                                minLength: 1
                              requirement_type_detail:
                                type: string
                                minLength: 1
                              requirement_type_detail_detail:
                                type: string
                                minLength: 1
                              required_credit:
                                type: number
                              earned_credit:
                                type: number
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - major_name: 경영학과
                        major_type: major
                        requirements:
                          - id: 1
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: all
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 130
                            earned_credit: 69
                          - id: 2
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_requirement
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 30
                            earned_credit: 9
                          - id: 3
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_elective
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 6
                          - id: 4
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: general
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 9
                      - major_name: 컴퓨터공학과
                        major_type: double_major
                        requirements:
                          - id: 5
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: all
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 130
                            earned_credit: 69
                          - id: 6
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_requirement
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 30
                            earned_credit: 9
                          - id: 7
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: major_elective
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 6
                          - id: 8
                            description: ''
                            is_fulfilled: false
                            is_credit_requirement: true
                            requirement_type: general
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 15
                            earned_credit: 9
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: plan_id missing
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-requirement
      description: |-
        (Version 1.0에는 포함되지 않는 기능입니다.)
        plan_id에 해당하는 계획의 졸업요건들을 전공별로 리스트 형태로 반환합니다. search_type 값이 all이면 나와 관계된 모든 졸업요건을, credit이면 학점 관련 졸업요건만, etc이면 기타 졸업요건만 반환합니다.
      parameters:
        - schema:
            type: integer
          in: query
          name: plan_id
          required: true
          description: 졸업요건을 조회하고 싶은 Plan의 ID
        - schema:
            type: string
            enum:
              - all
              - credit
              - etc
          in: query
          name: search_type
          required: true
          description: 조회하고 싶은 졸업요건의 종류
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    put:
      summary: PUT /requirement/
      operationId: put-requirement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - major_name
                        - major_type
                      properties:
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                        requirements:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - id
                              - description
                              - is_fulfilled
                              - is_credit_requirement
                              - requirement_type
                              - requirement_type_detail
                              - requirement_type_detail_detail
                              - required_credit
                              - earned_credit
                            properties:
                              id:
                                type: number
                              description:
                                type: string
                              is_fulfilled:
                                type: boolean
                              is_credit_requirement:
                                type: boolean
                              requirement_type:
                                type: string
                                minLength: 1
                              requirement_type_detail:
                                type: string
                                minLength: 1
                              requirement_type_detail_detail:
                                type: string
                                minLength: 1
                              required_credit:
                                type: number
                              earned_credit:
                                type: number
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - major_name: 경영학과
                        major_type: major
                        requirements:
                          - id: 1
                            description: 경영 기타 졸업요건 1번입니다.
                            is_fulfilled: true
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 2
                            description: 경영 기타 졸업요건 2번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 3
                            description: 경영 기타 졸업요건 3번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 4
                            description: 경영 기타 졸업요건 4번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                      - major_name: 컴퓨터공학과
                        major_type: double_major
                        requirements:
                          - id: 5
                            description: 컴공 기타 졸업요건 1번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 6
                            description: 컴공 기타 졸업요건 2번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 7
                            description: 컴공 기타 졸업요건 3번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
                          - id: 8
                            description: 컴공 기타 졸업요건 4번입니다.
                            is_fulfilled: false
                            is_credit_requirement: false
                            requirement_type: none
                            requirement_type_detail: none
                            requirement_type_detail_detail: none
                            required_credit: 0
                            earned_credit: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: plan_id missing
        '401':
          description: Unauthorized
      description: |-
        (Version 1.0에는 포함되지 않는 기능입니다.)
        plan_id에 해당하는 계획에서 기타 졸업요건의 충족 여부를 User가 직접 체크하거나 체크 해제할 때 사용합니다. body의 is_fulfilled 값에 따라 체크 여부가 변경됩니다. requirement_id에 해당하는 졸업요건이 기타 졸업요건이 아닌 학점 관련 졸업요건일 시에는 에러 코드가 반환됩니다.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: ''
              minItems: 1
              uniqueItems: true
              items:
                type: object
                properties:
                  plan_id:
                    type: number
                  requirement_id:
                    type: number
                  is_fulfilled:
                    type: boolean
                required:
                  - plan_id
                  - requirement_id
                  - is_fulfilled
            examples:
              example-1:
                value:
                  - plan_id: 1
                    requirement_id: 1
                    is_fulfilled: true
                  - plan_id: 2
                    requirement_id: 2
                    is_fulfilled: false
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              description: ''
              type: object
              properties:
                idiot:
                  type: array
                  items:
                    properties: {}
              required:
                - idiot
          text/html:
            schema:
              type: object
              properties: {}
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    parameters: []
  /semester/:
    post:
      summary: POST /semester/
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan:
                    type: number
                  year:
                    type: number
                  semester_type:
                    type: string
                    minLength: 1
                  is_complete:
                    type: boolean
                  major_requirement_credit:
                    type: number
                  major_elective_credit:
                    type: number
                  general_credit:
                    type: number
                  general_elective_credit:
                    type: number
                  lectures:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - plan
                  - year
                  - semester_type
                  - is_complete
                  - major_requirement_credit
                  - major_elective_credit
                  - general_credit
                  - general_elective_credit
                  - lectures
                x-examples:
                  example-1:
                    id: 1
                    plan: 5
                    year: 2019
                    semester_type: first
                    is_complete: false
                    major_requirement_credit: 0
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures: []
              examples:
                example-1:
                  value:
                    id: 1
                    plan: 5
                    year: 2019
                    semester_type: first
                    is_complete: false
                    major_requirement_credit: 0
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures: []
      operationId: post-semester
      description: '유저의 현재 계획에 학기를 추가합니다. 한 번에 하나의 학기씩 추가됩니다. '
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                plan:
                  type: number
                year:
                  type: number
                semester_type:
                  type: string
                  minLength: 1
                is_complete:
                  type: boolean
              required:
                - plan
                - year
                - semester_type
                - is_complete
            examples:
              example-1:
                value:
                  plan: 5
                  year: 2019
                  semester_type: first
                  is_complete: false
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    parameters: []
  '/semester/{semester_id}/':
    parameters:
      - schema:
          type: string
        name: semester_id
        in: path
        required: true
    put:
      summary: 'PUT /semester/{semester_id}/'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan:
                    type: number
                  year:
                    type: number
                  semester_type:
                    type: string
                    minLength: 1
                  is_complete:
                    type: boolean
                  major_requirement_credit:
                    type: number
                  major_elective_credit:
                    type: number
                  general_credit:
                    type: number
                  general_elective_credit:
                    type: number
                  lectures:
                    type: array
                    items:
                      properties: {}
                required:
                  - id
                  - plan
                  - year
                  - semester_type
                  - is_complete
                  - major_requirement_credit
                  - major_elective_credit
                  - general_credit
                  - general_elective_credit
                  - lectures
              examples:
                example-1:
                  value:
                    id: 1
                    plan: 5
                    year: 2018
                    semester_type: second
                    is_complete: false
                    major_requirement_credit: 0
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures: []
                example-2:
                  value:
                    id: 0
                    plan: 0
                    year: 0
                    semester_type: string
                    is_complete: true
                    major_requirement_credit: 0
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures:
                      - {}
      operationId: put-semester-semester_id
      description: 특정 학기의 정보를 수정합니다. 시기를 변경하거나 완료 여부를 변경하거나 둘 중 하나의 작업만 한번에 수행할 수 있습니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                year:
                  type: number
                semester_type:
                  type: string
                is_complete:
                  type: boolean
            examples:
              example-1:
                value:
                  year: 2018
                  semester_type: second
              example-2:
                value:
                  year: 0
                  semester_type: string
                  is_complete: true
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    delete:
      summary: 'DELETE /semester/{semester_id}/'
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-semester-semester_id
      description: '유저 계획의 학기를 삭제합니다.  '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    get:
      summary: 'GET /semester/{semester_id}/'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan:
                    type: number
                  year:
                    type: number
                  semester_type:
                    type: string
                    minLength: 1
                  is_complete:
                    type: boolean
                  major_requirement_credit:
                    type: number
                  major_elective_credit:
                    type: number
                  general_credit:
                    type: number
                  general_elective_credit:
                    type: number
                  lectures:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - plan
                  - year
                  - semester_type
                  - is_complete
                  - major_requirement_credit
                  - major_elective_credit
                  - general_credit
                  - general_elective_credit
                  - lectures
                x-examples:
                  example-1:
                    id: 1
                    plan: 5
                    year: 2019
                    semester_type: first
                    is_complete: false
                    major_requirement_credit: 0
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures: []
              examples:
                example-1:
                  value:
                    id: 1
                    plan: 5
                    year: 2019
                    semester_type: first
                    is_complete: false
                    major_requirement_credit: 0
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures: []
      operationId: get-semester-semester_id
      description: '유저의 현재 계획의 학기를 조회해 해당 학기의 수업들을 나열합니다. '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /lecture/:
    post:
      summary: POST /lecture/
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan:
                    type: number
                  year:
                    type: number
                  semester_type:
                    type: string
                    minLength: 1
                  is_complete:
                    type: boolean
                  major_requirement_credit:
                    type: number
                  major_elective_credit:
                    type: number
                  general_credit:
                    type: number
                  general_elective_credit:
                    type: number
                  lectures:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - semesterlecture_id
                        - lecture_id
                        - lecture_code
                        - lecture_name
                        - credit
                        - open_semester
                        - lecture_type
                        - recognized_major_name1
                        - lecture_type1
                        - recognized_major_name2
                        - lecture_type2
                        - is_modified
                        - recent_sequence
                      properties:
                        semesterlecture_id:
                          type: number
                        lecture_id:
                          type: number
                        lecture_code:
                          type: string
                          minLength: 1
                        lecture_name:
                          type: string
                          minLength: 1
                        credit:
                          type: number
                        open_semester:
                          type: string
                          minLength: 1
                        lecture_type:
                          type: string
                          minLength: 1
                        recognized_major_name1:
                          type: string
                          minLength: 1
                        lecture_type1:
                          type: string
                          minLength: 1
                        recognized_major_name2:
                          type: string
                          minLength: 1
                        lecture_type2:
                          type: string
                          minLength: 1
                        is_modified:
                          type: boolean
                        recent_sequence:
                          type: number
                required:
                  - id
                  - plan
                  - year
                  - semester_type
                  - is_complete
                  - major_requirement_credit
                  - major_elective_credit
                  - general_credit
                  - general_elective_credit
                  - lectures
                x-examples:
                  example-1:
                    id: 1
                    plan: 5
                    year: 2019
                    semester_type: first
                    is_complete: false
                    major_requirement_credit: 9
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures:
                      - semesterlecture_id: 14
                        lecture_id: 1006
                        lecture_code: '251.103'
                        lecture_name: 경제원론
                        credit: 3
                        open_semester: unknown
                        lecture_type: major_requirement
                        recognized_major_name1: 경영학과
                        lecture_type1: major_requirement
                        recognized_major_name2: none
                        lecture_type2: none
                        is_modified: false
                        recent_sequence: 0
                      - semesterlecture_id: 15
                        lecture_id: 3362
                        lecture_code: '251.301'
                        lecture_name: 재무관리
                        credit: 3
                        open_semester: all
                        lecture_type: major_requirement
                        recognized_major_name1: 경영학과
                        lecture_type1: major_requirement
                        recognized_major_name2: none
                        lecture_type2: none
                        is_modified: false
                        recent_sequence: 1
                      - semesterlecture_id: 16
                        lecture_id: 3364
                        lecture_code: '251.321'
                        lecture_name: 마케팅관리
                        credit: 3
                        open_semester: all
                        lecture_type: major_requirement
                        recognized_major_name1: 경영학과
                        lecture_type1: major_requirement
                        recognized_major_name2: none
                        lecture_type2: none
                        is_modified: false
                        recent_sequence: 2
              examples:
                example-1:
                  value:
                    id: 1
                    plan: 5
                    year: 2019
                    semester_type: first
                    is_complete: false
                    major_requirement_credit: 9
                    major_elective_credit: 0
                    general_credit: 0
                    general_elective_credit: 0
                    lectures:
                      - semesterlecture_id: 14
                        lecture_id: 1006
                        lecture_code: '251.103'
                        lecture_name: 경제원론
                        credit: 3
                        open_semester: unknown
                        lecture_type: major_requirement
                        recognized_major_name1: 경영학과
                        lecture_type1: major_requirement
                        recognized_major_name2: none
                        lecture_type2: none
                        is_modified: false
                        recent_sequence: 0
                      - semesterlecture_id: 15
                        lecture_id: 3362
                        lecture_code: '251.301'
                        lecture_name: 재무관리
                        credit: 3
                        open_semester: all
                        lecture_type: major_requirement
                        recognized_major_name1: 경영학과
                        lecture_type1: major_requirement
                        recognized_major_name2: none
                        lecture_type2: none
                        is_modified: false
                        recent_sequence: 1
                      - semesterlecture_id: 16
                        lecture_id: 3364
                        lecture_code: '251.321'
                        lecture_name: 마케팅관리
                        credit: 3
                        open_semester: all
                        lecture_type: major_requirement
                        recognized_major_name1: 경영학과
                        lecture_type1: major_requirement
                        recognized_major_name2: none
                        lecture_type2: none
                        is_modified: false
                        recent_sequence: 2
      operationId: post-lecture
      description: '유저의 학기별 테이블에 강의를 추가합니다. 한번에 복수의 수업 추가가 가능합니다. '
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                semester_id:
                  type: number
                lecture_id:
                  type: array
                  items:
                    required: []
                    properties: {}
                lecture_type:
                  type: array
                  items:
                    required: []
                    properties: {}
                recognized_major_id:
                  type: array
                  items:
                    required: []
                    properties: {}
              required:
                - semester_id
                - lecture_id
                - lecture_type
                - recognized_major_id
              x-examples:
                example-1:
                  semester_id: 1
                  lecture_id:
                    - 1006
                    - 3362
                    - 3364
                  lecture_type:
                    - major_requirement
                    - major_requirement
                    - major_requirement
                  recognized_major_id:
                    - 23
                    - 23
                    - 23
            examples:
              example-1:
                value:
                  semester_id: 1
                  lecture_id:
                    - 1006
                    - 3362
                    - 3364
                  lecture_type:
                    - major_requirement
                    - major_requirement
                    - major_requirement
                  recognized_major_id:
                    - 23
                    - 23
                    - 23
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
    get:
      summary: GET /lecture/
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                items:
                  type: object
                  required:
                    - id
                    - lecture_code
                    - lecture_name
                    - open_department
                    - open_major
                    - open_semester
                    - lecture_type
                    - credit
                    - grade
                    - prev_lecture_name
                  properties:
                    id:
                      type: number
                    lecture_code:
                      type: string
                      minLength: 1
                    lecture_name:
                      type: string
                      minLength: 1
                    open_department:
                      type: string
                      minLength: 1
                    open_major:
                      type: string
                      minLength: 1
                    open_semester:
                      type: string
                      minLength: 1
                    lecture_type:
                      type: string
                      minLength: 1
                    credit:
                      type: number
                    grade:
                      type: number
                    prev_lecture_name:
                      type: string
                x-examples:
                  example-1:
                    - id: 1006
                      lecture_code: '251.103'
                      lecture_name: 경제원론
                      open_department: 경영대학
                      open_major: 경영학과
                      open_semester: unknown
                      lecture_type: major_requirement
                      credit: 3
                      grade: 1
                      prev_lecture_name: ''
                    - id: 3362
                      lecture_code: '251.301'
                      lecture_name: 재무관리
                      open_department: 경영대학
                      open_major: 경영학과
                      open_semester: all
                      lecture_type: major_requirement
                      credit: 3
                      grade: 2
                      prev_lecture_name: ''
                    - id: 3364
                      lecture_code: '251.321'
                      lecture_name: 마케팅관리
                      open_department: 경영대학
                      open_major: 경영학과
                      open_semester: all
                      lecture_type: major_requirement
                      credit: 3
                      grade: 3
                      prev_lecture_name: ''
              examples:
                example-1:
                  value:
                    - id: 1006
                      lecture_code: '251.103'
                      lecture_name: 경제원론
                      open_department: 경영대학
                      open_major: 경영학과
                      open_semester: unknown
                      lecture_type: major_requirement
                      credit: 3
                      grade: 1
                      prev_lecture_name: ''
                    - id: 3362
                      lecture_code: '251.301'
                      lecture_name: 재무관리
                      open_department: 경영대학
                      open_major: 경영학과
                      open_semester: all
                      lecture_type: major_requirement
                      credit: 3
                      grade: 2
                      prev_lecture_name: ''
                    - id: 3364
                      lecture_code: '251.321'
                      lecture_name: 마케팅관리
                      open_department: 경영대학
                      open_major: 경영학과
                      open_semester: all
                      lecture_type: major_requirement
                      credit: 3
                      grade: 3
                      prev_lecture_name: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                required:
                  - error
              examples:
                example-1:
                  value:
                    error: year missing
        '401':
          description: Unauthorized
      operationId: get-lecture
      description: |-
        강의를 검색합니다. 1) 전필/전선/교양 별로 강의를 불러올 수 있고, 2) 강의 이름에 포함된 키워드를 통해 검색이 가능합니다.

        Enum search_type {
          major_requirement
          major_elective
          general
          keyword
        }

        search_type은 반드시 query params에 포함되어야 합니다.
        search_type이 major_requirement나 major_elective일 시에는 반드시 major를 포함하여 요청을 보내야 합니다.
        search_type이 genral일 때는 반드시 search_keyword와 credit을 모두 포함하여 요청을 보내야 합니다.
        search_type이 keyword일 때는 반드시 search_keyword를 포함하여 요청을 보내야 합니다.
      parameters:
        - schema:
            type: string
          in: query
          name: search_type
          description: '전필, 전선, 교양, 검색 탭을 구분합니다.'
          required: true
        - schema:
            type: string
          in: query
          name: search_keyword
          description: 이름 안에 검색 키워드가 들어있는 강의들을 검색합니다.
          required: true
        - schema:
            type: string
          in: query
          name: major
          description: 강의를 조회하고자 하는 전공의 id입니다.
          required: true
        - schema:
            type: string
          in: query
          name: credit
          description: 기준 학점이 credit과 일치하는 강의들을 검색합니다.
          required: true
    parameters: []
  '/lecture/{lecture_id}/position/':
    parameters:
      - schema:
          type: string
        name: lecture_id
        in: path
        required: true
    put:
      summary: 'PUT /lecture/{lecture_id}/position/'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: ''
                minItems: 1
                uniqueItems: true
                items:
                  type: object
                  required:
                    - id
                    - plan
                    - year
                    - semester_type
                    - is_complete
                    - major_requirement_credit
                    - major_elective_credit
                    - general_credit
                    - general_elective_credit
                    - lectures
                  properties:
                    id:
                      type: number
                    plan:
                      type: number
                    year:
                      type: number
                    semester_type:
                      type: string
                      minLength: 1
                    is_complete:
                      type: boolean
                    major_requirement_credit:
                      type: number
                    major_elective_credit:
                      type: number
                    general_credit:
                      type: number
                    general_elective_credit:
                      type: number
                    lectures:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        required:
                          - semesterlecture_id
                          - lecture_id
                          - lecture_code
                          - lecture_name
                          - credit
                          - open_semester
                          - lecture_type
                          - recognized_major_name1
                          - lecture_type1
                          - recognized_major_name2
                          - lecture_type2
                          - is_modified
                          - recent_sequence
                        properties:
                          semesterlecture_id:
                            type: number
                          lecture_id:
                            type: number
                          lecture_code:
                            type: string
                            minLength: 1
                          lecture_name:
                            type: string
                            minLength: 1
                          credit:
                            type: number
                          open_semester:
                            type: string
                            minLength: 1
                          lecture_type:
                            type: string
                            minLength: 1
                          recognized_major_name1:
                            type: string
                            minLength: 1
                          lecture_type1:
                            type: string
                            minLength: 1
                          recognized_major_name2:
                            type: string
                            minLength: 1
                          lecture_type2:
                            type: string
                            minLength: 1
                          is_modified:
                            type: boolean
                          recent_sequence:
                            type: number
                x-examples:
                  example-1:
                    - id: 1
                      plan: 5
                      year: 2019
                      semester_type: first
                      is_complete: false
                      major_requirement_credit: 6
                      major_elective_credit: 0
                      general_credit: 0
                      general_elective_credit: 0
                      lectures:
                        - semesterlecture_id: 14
                          lecture_id: 1006
                          lecture_code: '251.103'
                          lecture_name: 경제원론
                          credit: 3
                          open_semester: UNKNOWN
                          lecture_type: major_requirement
                          recognized_major_name1: 경영학과
                          lecture_type1: major_requirement
                          recognized_major_name2: none
                          lecture_type2: none
                          is_modified: false
                          recent_sequence: 0
                        - semesterlecture_id: 15
                          lecture_id: 3362
                          lecture_code: '251.301'
                          lecture_name: 재무관리
                          credit: 3
                          open_semester: ALL
                          lecture_type: major_requirement
                          recognized_major_name1: 경영학과
                          lecture_type1: major_requirement
                          recognized_major_name2: none
                          lecture_type2: none
                          is_modified: false
                          recent_sequence: 1
                    - id: 2
                      plan: 5
                      year: 2019
                      semester_type: second
                      is_complete: false
                      major_requirement_credit: 3
                      major_elective_credit: 0
                      general_credit: 0
                      general_elective_credit: 0
                      lectures:
                        - semesterlecture_id: 16
                          lecture_id: 3364
                          lecture_code: '251.321'
                          lecture_name: 마케팅관리
                          credit: 3
                          open_semester: ALL
                          lecture_type: major_requirement
                          recognized_major_name1: 경영학과
                          lecture_type1: major_requirement
                          recognized_major_name2: none
                          lecture_type2: none
                          is_modified: false
                          recent_sequence: 0
              examples:
                example-1:
                  value:
                    - id: 1
                      plan: 5
                      year: 2019
                      semester_type: first
                      is_complete: false
                      major_requirement_credit: 6
                      major_elective_credit: 0
                      general_credit: 0
                      general_elective_credit: 0
                      lectures:
                        - semesterlecture_id: 14
                          lecture_id: 1006
                          lecture_code: '251.103'
                          lecture_name: 경제원론
                          credit: 3
                          open_semester: UNKNOWN
                          lecture_type: major_requirement
                          recognized_major_name1: 경영학과
                          lecture_type1: major_requirement
                          recognized_major_name2: none
                          lecture_type2: none
                          is_modified: false
                          recent_sequence: 0
                        - semesterlecture_id: 15
                          lecture_id: 3362
                          lecture_code: '251.301'
                          lecture_name: 재무관리
                          credit: 3
                          open_semester: ALL
                          lecture_type: major_requirement
                          recognized_major_name1: 경영학과
                          lecture_type1: major_requirement
                          recognized_major_name2: none
                          lecture_type2: none
                          is_modified: false
                          recent_sequence: 1
                    - id: 2
                      plan: 5
                      year: 2019
                      semester_type: second
                      is_complete: false
                      major_requirement_credit: 3
                      major_elective_credit: 0
                      general_credit: 0
                      general_elective_credit: 0
                      lectures:
                        - semesterlecture_id: 16
                          lecture_id: 3364
                          lecture_code: '251.321'
                          lecture_name: 마케팅관리
                          credit: 3
                          open_semester: ALL
                          lecture_type: major_requirement
                          recognized_major_name1: 경영학과
                          lecture_type1: major_requirement
                          recognized_major_name2: none
                          lecture_type2: none
                          is_modified: false
                          recent_sequence: 0
      operationId: put-lecture-lecture_id
      description: 유저의 학기에 포함된 강의를 수정합니다. 강의를 다른 학기로 이동시킬 수 있습니다. url에 들어가는 id는 Lecture의 id입니다. body에 들어가는 id도 모두 Lecture의 id입니다.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                semester_to:
                  type: array
                  items:
                    required: []
                    properties: {}
                semester_from:
                  type: array
                  items:
                    required: []
                    properties: {}
                semester_to_id:
                  type: number
                semester_from_id:
                  type: number
              required:
                - semester_to
                - semester_from
                - semester_to_id
                - semester_from_id
              x-examples:
                example-1:
                  semester_to:
                    - 3364
                  semester_from:
                    - 1006
                    - 3362
                  semester_to_id: 2
                  semester_from_id: 1
            examples:
              example-1:
                value:
                  semester_to:
                    - 3364
                  semester_from:
                    - 1006
                    - 3362
                  semester_to_id: 2
                  semester_from_id: 1
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                semester:
                  type: number
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  /major/:
    get:
      summary: GET /major/
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  majors:
                    type: array
                    items:
                      properties: {}
                required:
                  - majors
              examples:
                example-1:
                  value:
                    majors:
                      - 간호학과
                      - 건설환경공학부
                      - 건축학과
                      - 경영학과
                      - 경제학부
                      - 고고미술사학과
                      - 공예과
                      - 교육학과
                      - 교직연합전공 통합사회
                      - 국사학과
                      - 국악과
                      - 국어교육과
                      - 국어국문학과
                      - 기계공학부
                      - 기계항공공학부
                      - 기악과
                      - 노어노문학과
                      - 농경제사회학부
                      - 독어교육과
                      - 독어독문학과
                      - 동양사학과
                      - 동양화과
                      - 디자인과
                      - 디자인학부
                      - 무소속학과
                      - 물리·천문학부
                      - 물리교육과
                      - 미학과
                      - 바이오시스템·소재학부
                      - 법학과
                      - 법학부
                      - 보건학과
                      - 불어교육과
                      - 불어불문학과
                      - 사회교육과
                      - 사회복지학과
                      - 사회학과
                      - 산림과학부
                      - 산업공학과
                      - 생명과학부
                      - 생물교육과
                      - 서양사학과
                      - 서양화과
                      - 서어서문학과
                      - 성악과
                      - 소비자아동학부
                      - 수리과학부
                      - 수의예과
                      - 수의학과
                      - 수학교육과
                      - 식물생산과학부
                      - 식품·동물생명공학부
                      - 식품영양학과
                      - 심리학과
                      - 아시아언어문명학부
                      - 약학과(2+4년제)
                      - 언론정보학과
                      - 언어학과
                      - 에너지자원공학과
                      - 역사교육과
                      - 영어교육과
                      - 영어영문학과
                      - 외교학과
                      - 원자핵공학과
                      - 윤리교육과
                      - 응용생물화학부
                      - 의류학과
                      - 의예과
                      - 의학과
                      - 인류학과
                      - 작곡과
                      - 재료공학부
                      - 전기·정보공학부
                      - 정치외교학부
                      - 조경·지역시스템공학부
                      - 조선해양공학과
                      - 조소과
                      - 종교학과
                      - 중어중문학과
                      - 지구과학교육과
                      - 지구환경과학부
                      - 지리교육과
                      - 지리학과
                      - 철학과
                      - 체육교육과
                      - 치의학과
                      - 컴퓨터공학과
                      - 컴퓨터공학부
                      - 통계학과
                      - 항공우주공학과
                      - 행정학과
                      - 협동과정  비교문학전공
                      - 협동과정  서양고전학전공
                      - 협동과정  여성학전공
                      - 협동과정 과학사 및 과학철학전공
                      - 협동과정 기술경영·경제·정책전공
                      - 화학교육과
                      - 화학부
                      - 화학생물공학부
                      - 환경계획학과
        '403':
          description: Token 인증 실패
      operationId: get-major
      parameters:
        - schema:
            type: string
          in: query
          name: search_keyword
          description: 해당 키워드로 전공을 검색할 수 있습니다.
      description: 모든 전공들의 리스트를 조회할 수 있습니다. Query Params의 search_keyword를 이용하면 특정 키워드로 전공을 검색할 수도 있습니다.
  '/lecture/{semesterlecture_id}/':
    parameters:
      - schema:
          type: string
        name: semesterlecture_id
        in: path
        required: true
    delete:
      summary: 'DELETE /lecture/{semesterlecture_id}/'
      operationId: delete-lecture-lecture_id
      responses:
        '200':
          description: OK
      description: '유저의 현재 학기별 테이블에서 강의를 삭제합니다.  '
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
  '/lecture/{lecture_id}/recognized_major/':
    parameters:
      - schema:
          type: string
        name: lecture_id
        in: path
        required: true
    put:
      summary: 'PUT /lecture/{lecture_id}/recognized_major/'
      operationId: put-lecture-recognized_major-lecture_id
      responses:
        '200':
          description: OK
      description: |-
        메인보드에 위치한 특정 강의의 강의구분을 사용자가 직접 변경할 수 있도록 지원하는 API입니다.

        Case 1. XX -> 전필 = major_requirement
        Case 2. XX -> 전선 = major_elective
        Case 3. XX -> 교양 = general
        Case 4. XX -> 일선 = general_elective

        Case 1, 2인 경우에는 인정 학과별 강의 구분을 recognized_major1, 2와 lecture_type1, 2를 이용해 입력해주세요. 인정학과는 최대 2개까지 복수 인정됩니다. Case 1, 2인 경우에 lecture_type에는 lecture_type1과 같은 값을 넣어주세요.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Token Authentication
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                lecture_type:
                  type: string
                  minLength: 1
                recognized_major_name1:
                  type: string
                  minLength: 1
                recognized_major_type1:
                  type: string
                  minLength: 1
                lecture_type1:
                  type: string
                  minLength: 1
                recognized_major_name2:
                  type: string
                  minLength: 1
                recognized_major_type2:
                  type: string
                  minLength: 1
                lecture_type2:
                  type: string
                  minLength: 1
              required:
                - lecture_type
                - recognized_major_name1
                - recognized_major_type1
                - lecture_type1
                - recognized_major_name2
                - recognized_major_type2
                - lecture_type2
              x-examples:
                example-1:
                  lecture_type: major
                  recognized_major_name1: 컴퓨터공학과
                  recognized_major_type1: major
                  lecture_type1: major_requirement
                  recognized_major_name2: 통계학과
                  recognized_major_type2: double_major
                  lecture_type2: major_elective
            examples:
              example-1:
                value:
                  lecture_type: major_requirement
                  recognized_major_name1: 경영학과
                  recognized_major_type1: major
                  lecture_type1: major_requirement
                  recognized_major_name2: 컴퓨터공학부
                  recognized_major_type2: major
                  lecture_type2: major_elective
  '/plan/copy/{plan_id}/':
    parameters:
      - schema:
          type: string
        name: plan_id
        in: path
        required: true
    post:
      summary: 'POST /plan/copy/{plan_id}/'
      operationId: post-plan-copy-plan_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  id:
                    type: number
                  plan_name:
                    type: string
                    minLength: 1
                  recent_scroll:
                    type: number
                  majors:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - major_name
                        - major_type
                      properties:
                        id:
                          type: number
                        major_name:
                          type: string
                          minLength: 1
                        major_type:
                          type: string
                          minLength: 1
                  semesters:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - id
                  - plan_name
                  - recent_scroll
                  - majors
                  - semesters
                x-examples:
                  example-1:
                    id: 7
                    plan_name: 짹짹이의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 69
                        major_name: 경영학과
                        major_type: major
                      - id: 110
                        major_name: 컴퓨터공학과
                        major_type: double_major
                    semesters: []
              examples:
                example-1:
                  value:
                    id: 7
                    plan_name: 짹짹이의 계획1
                    recent_scroll: 0
                    majors:
                      - id: 69
                        major_name: 경영학과
                        major_type: major
                      - id: 110
                        major_name: 컴퓨터공학과
                        major_type: double_major
                    semesters: []
      description: 기존 계획을 복제하는 기능을 지원하는 API입니다.
